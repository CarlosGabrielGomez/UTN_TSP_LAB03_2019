CREATE DATABASE TP_SUGERIDO_1A

GO

USE TP_SUGERIDO_1A

GO

CREATE TABLE MARCAS
(
 ID_MAR TINYINT NOT NULL PRIMARY KEY IDENTITY(1,1), ---GENERACION AUTOMATICA DEL ID QUE VA DE 1 A 255
 NOMBRE VARCHAR(50) NOT NULL

)
GO 

CREATE TABLE TIPOS_ARTICULOS
(	ID_TIP TINYINT PRIMARY KEY NOT NULL IDENTITY(1,1),
	DESCRIPCION VARCHAR(50) NOT NULL 
)


GO

CREATE TABLE ARTICULOS
(	ID_ART TINYINT PRIMARY KEY NOT NULL IDENTITY(1,1),---GENERACION AUTOMATICA DEL ID QUE VA DE 1 A 255
	TIPO TINYINT NOT NULL FOREIGN KEY REFERENCES TIPOS_ARTICULOS(ID_TIP),
	MARCA TINYINT NOT NULL FOREIGN KEY REFERENCES MARCAS(ID_MAR),
	DESCRIPCION VARCHAR(50) NULL,
	PRECIO_COMPRA FLOAT NOT NULL,--DESPES OBTENEMOS LA GANANCIA CON EL PRECIO DE VENTA

)

GO

CREATE TABLE STOCK
(	ID_STO TINYINT PRIMARY KEY NOT NULL IDENTITY(1,1),---GENERACION AUTOMATICA DEL ID QUE VA DE 1 A 255
	ARTCULO TINYINT NOT NULL FOREIGN KEY REFERENCES ARTICULOS(ID_ART),
	CANT INT NOT NULL CHECK(CANT>0),--EL STOCK NO PUEDE SER NEGATIVO
	ESTADO BIT NOT NULL--REPRESENTAMOS TRUE O FALSE 
)
GO
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
--TABLAS RELACIONADAS CON LAS PERSONAS

							


CREATE TABLE PROVINCIAS--LOS NOMBRES DE LAS TABLAS VAN EN PLURAS 
(	ID_PRO TINYINT NOT NULL PRIMARY KEY IDENTITY(1,1),
	NOMBRE VARCHAR(50) NOT NULL
)

GO

CREATE TABLE LOCALIDADES 
(	ID_LOC TINYINT NOT NULL PRIMARY KEY IDENTITY(1,1),
	PROVINCIA TINYINT NOT NULL FOREIGN KEY REFERENCES PROVINCIAS(ID_PRO),
	NOMBRE VARCHAR(50) NOT NULL
)


GO

CREATE TABLE DOMICILIOS
(	ID_DOM TINYINT PRIMARY KEY NOT NULL IDENTITY(1,1),
	LOCALIDAD TINYINT NOT NULL FOREIGN KEY REFERENCES LOCALIDADES(ID_LOC),
	CALLE VARCHAR(50)NOT NULL,
	NUMERO VARCHAR(50)NOT NULL,
)

GO
----------------------------------------------------------------------------------
----------------------------------------------------------------------------------

CREATE TABLE EMPLEADOS
(	LEGAJO TINYINT PRIMARY KEY NOT NULL IDENTITY(1,1),--
	DNI VARCHAR(10) NOT NULL UNIQUE(DNI),--GARANTIZAMOS QUE EL DNI NUNCA SE REPITA 
	DOMICILIO TINYINT FOREIGN KEY REFERENCES DOMICILIOS(ID_DOM),
	APELLIDO VARCHAR(50) NOT NULL,
	NOMBRE VARCHAR(50) NOT NULL,
	GENERO CHAR NOT NULL CHECK(GENERO='MASCULINO'OR GENERO='FEMENINO'),
	FECHA_NAC SMALLDATETIME NULL,--FECHA DE NACIMIENTO
	FECHA_ING SMALLDATETIME NULL,--FECHA DE INGRESO A LA EMPRESA--CON AMBOS SACAMOS LA EDAD---
	SUELDO FLOAT NOT NULL 
)


GO


CREATE TABLE TELEFONOS_EMPLEADOS
(	EMPLEADO TINYINT NOT NULL FOREIGN KEY REFERENCES EMPLEADOS(LEGAJO),--UN EMPLEADO TIENE VARIOS NUMEROS
	NUMERO VARCHAR(10) NOT NULL,--NO REALIZAMOS NINGUNA OPERACION SOBRE LOS NUMEROS
	DESCRIPCION VARCHAR(50) NULL

)
GO





CREATE TABLE CLIENTES
(
	--ID_CLI TINYINT PRIMARY KEY NOT NULL IDENTITY(1,1),
	DNI VARCHAR(10) NOT NULL UNIQUE(DNI),
	DOMICILIO TINYINT FOREIGN KEY REFERENCES DOMICILIOS(ID_DOM),
	APELLIDO VARCHAR(50) NOT NULL,
	NOMBRE VARCHAR(50) NOT NULL,
	FECHA_NAC SMALLDATETIME NULL


)

GO

CREATE TABLE TELEFONOS_CLIENTES
(	CLIENTE VARCHAR(10) NOT NULL FOREIGN KEY REFERENCES CLIENTES(DNI),--UN EMPLEADO TIENE VARIOS NUMEROS
	NUMERO VARCHAR(10) NOT NULL,--NO REALIZAMOS NINGUNA OPERACION SOBRE LOS NUMEROS
	DESCRIPCION VARCHAR(50) NULL

)
GO

CREATE TABLE VENTAS
(	ID_VEN TINYINT NOT NULL PRIMARY KEY IDENTITY(1,1),
	PRODUCTO TINYINT NOT NULL FOREIGN KEY REFERENCES ARTICULOS(ID_ART),
	PRECIO_VENTA FLOAT NOT NULL--DESPES OBTENEMOS LA GANANCIA CON EL PRECIO DE COMPRA

)

GO

CREATE TABLE FACTURAS
(	VENTA TINYINT NOT NULL PRIMARY KEY IDENTITY (1,1),
	VENDEDOR TINYINT NOT NULL FOREIGN KEY REFERENCES EMPLEADOS(LEGAJO),--TRAEMOS EL LEGAJO DEL EMPLEADO
	CONSUMIDOR VARCHAR(10) NOT NULL FOREIGN KEY REFERENCES CLIENTES(DNI),--DNI ES UN STRING
	FECHA_VENTA SMALLDATETIME NOT NULL,--FECHA DE NACIMIENTO
	PAGO CHAR NOT NULL CHECK(PAGO='TARJETA'OR PAGO='EFECTIVO'),
	TOTAL FLOAT NOT NULL CHECK(TOTAL>=0)--LA FACTURACION DEBE SER POSITIVA
	

)
GO

--USE TP_SUGERIDO_1A

--DROP DATABASE TP_SUGERIDO_1A--ELIMINAMOS LA BASE DE DATOS INCLUYENDO LAS TABLAS 






